trigger:
  branches:
    include:
    - master
    - develop

jobs:
- job: infrastructure
  condition: and(eq(variables['Build.Reason'], 'Manual'), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  pool:
    vmImage: 'ubuntu-latest'
  variables:
  - group: Pulumi xtellurian

  steps:
    - script: |
        if [ "$(action)" == "up" ] || [ "$(action)" == "preview" ] || [ "$(action)" == "destroy" ]; then
            echo "$(action) is a valid Pulumi action"
        else
            echo "Action $(action) is invalid. Choose 'up' or 'destroy' "
        fi
      displayName: Check pulumi action is valid

    - script: curl -fsSL https://get.pulumi.com | sh
      condition: eq(variables['Build.Reason'], 'Manual')
      displayName: Install Pulumi 

    - script: npm install
      condition: eq(variables['Build.Reason'], 'Manual')
      workingDirectory: pulumi
      displayName: NPM install

    - task: Pulumi@0
      condition: eq(variables['Build.Reason'], 'Manual')
      inputs:
        azureSubscription: "amphoradata1"
        command: "$(action)"
        cwd: "pulumi/"
        stack: "xtellurian/amphora/test"

- job: apps
  condition: always()
  pool:
    vmImage: 'ubuntu-latest'

  variables:
    imageName: api
    imageTag: latest
    buildConfiguration: 'Release'

  steps:

  - script: dotnet build --configuration $(buildConfiguration)
    workingDirectory: apps
    displayName: 'dotnet build $(buildConfiguration)'

  - script: dotnet test  --logger trx /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura apps.sln
    workingDirectory: apps
    displayName: dotnet test

  - task: PublishTestResults@2
    condition: always() 
    inputs:
      testRunner: VSTest
      testResultsFiles: '**/*.trx'

  - task: PublishCodeCoverageResults@1
    displayName: Publish Code Coverage Report
    inputs:
      summaryFileLocation: $(Build.SourcesDirectory)/apps/test/coverage.cobertura.xml
      codecoverageTool: cobertura

  - script: docker build .
    workingDirectory: apps
    displayName: Build docker image