trigger:
  batch: true
  branches:
    include:
      - master
      - develop
    exclude:
      - migrate/efcore
  paths:
    exclude:
    - README.md
    - .gitignore
    - .vscode/*
    - pipeline/stack.destroy.pipeline.yaml


stages:

- stage: branch
  displayName: Branch Stage
  variables:
    - name: stack
      value: $(Build.SourceBranchName)
    - group: AzureDeploySP
  jobs:
  - job: delay_if_pr
    pool: server
    displayName: Delay if Pull Request
    steps:
      - task: Delay@1
        displayName: Avoid conflict PRs and Branch Builds
        condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
        inputs:
          delayForMinutes: '2'
  - template: pipeline/infra.create.job.yaml
    parameters:
      jobName: infrastructure
  - template: pipeline/app.test.job.yaml
    parameters:
      jobName: apps
  # - template: pipeline/app.deploy.job.yaml
  #   parameters:
  #     dependsOn: apps
  #     staging: 'false'
  - job: tagversion
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    steps:
      - checkout: self
        persistCredentials: true # for pushing
      - template: pipeline/checkversion.steps.yaml
      - template: pipeline/tagrepo.steps.yaml
        parameters:
          tag: APPVERSION/$(APP_VERSION)

- stage: deploy_develop
  displayName: Deploy to Develop Envionment 
  condition: and(succeeded('branch'), eq(variables['Build.SourceBranch'], 'refs/heads/develop'))
  variables:
    - group: AzureDeploySP
  jobs:
    - template: pipeline/deploymentjob.yaml
      parameters:
        environment: develop
        staging: 'false'

- stage: deploy_master
  displayName: Deploy to Master Envionment 
  condition: and(succeeded('branch'), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  variables:
    - group: AzureDeploySP
  jobs:
    - template: pipeline/deploymentjob.yaml
      parameters:
        environment: master
        staging: 'false'

- stage: deploy_prod
  displayName: Deploy to Prod Envionment 
  condition: and(succeeded('branch', 'deploy_master'), eq(variables['Build.SourceBranch'], 'refs/heads/master')) 
  variables:
    - group: PulumiAzureDevOpsProd
  jobs:
    - template: pipeline/deploymentjob.yaml
      parameters:
        environment: prod
        staging: 'true'

- stage: promote
  displayName: Promote in Prod Envionment (10%)
  condition: and(succeeded('branch', 'deploy_prod'), eq(variables['Build.SourceBranch'], 'refs/heads/master') )
  variables:
    - group: PulumiAzureDevOpsProd
  jobs:
    - job: init
      steps:
      - script: echo "Swapping Slots in Prod"
      - script: curl https://app.amphoradata.com/healthz\?x-ms-routing-name=staging --fail
        displayName: Check Staging is healthy before swapping

    - template: pipeline/app.slotswap.deploymentjob.yaml
      parameters:
        dependsOn: init
        jobName: prod_swapslots
        environment: prod

    