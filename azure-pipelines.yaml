trigger:
  branches:
    include:
    - master
    - develop

jobs:
- job: infrastructure
  # condition: and(eq(variables['Build.Reason'], 'Manual'), eq(variables['build.sourceBranch'], 'refs/heads/master'))
  pool:
    vmImage: 'ubuntu-latest'
  variables:
  - group: Pulumi xtellurian

  steps:
    - script: |
        if [ "$(action)" == "up" ] || [ "$(action)" == "preview" ] || [ "$(action)" == "destroy" ]; then
            echo "$(action) is a valid Pulumi action"
        else
            echo "Action $(action) is invalid. Choose 'up' or 'destroy' "
        fi
      displayName: Check pulumi action is valid

    - script: |
        chmod +x infra/scripts/*.sh
        ./infra/scripts/setup.sh
        ./infra/scripts/run-pulumi.sh
      displayName: 'Install pulumi and run infra code'
      name: pulumi
      env:
        PULUMI_ACCESS_TOKEN: $(pulumi.access.token)
        ARM_CLIENT_SECRET: $(arm.client.secret)
        ARM_SUBSCRIPTION_ID: $(arm.subscription.id)
        ARM_CLIENT_ID: $(arm.client.id)
        ARM_TENANT_ID: $(arm.tenant.id)

- job: apps
  dependsOn: infrastructure
  strategy:
    matrix:
      InMemory:
        PersistentStores: ''
        KvUri: ''
      Persistent:
        PersistentStores: 'true'
        KvUri: $[ dependencies.infrastructure.outputs['outputs.kvUri'] ]
    maxParallel: 2
  condition: always()
  pool:
    vmImage: 'ubuntu-latest'

  variables:
    imageName: api
    imageTag: latest
    buildConfiguration: 'Release'

  steps:

  - script: dotnet build --configuration $(buildConfiguration)
    workingDirectory: apps
    displayName: 'dotnet build $(buildConfiguration)'

  - script: dotnet test  --logger trx /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura apps.sln
    workingDirectory: apps
    displayName: dotnet test
    env:
      ASPNETCORE_kvUri: $(kvUri)
      ASPNETCORE_PersistentStores: $(PersistentStores)

  - task: PublishTestResults@2
    condition: always() 
    inputs:
      testRunner: VSTest
      testResultsFiles: '**/*.trx'

  - task: PublishCodeCoverageResults@1
    displayName: Publish Code Coverage Report
    inputs:
      summaryFileLocation: $(Build.SourcesDirectory)/apps/test/coverage.cobertura.xml
      codecoverageTool: cobertura

  - script: docker build .
    workingDirectory: apps
    displayName: Build docker image