steps:

# Download build and pipeline artifacts
- task: DownloadPipelineArtifact@2
  displayName: Download Artifacts
  inputs:
    source: 'current' # Options: current, specific
    path: $(Pipeline.Workspace)/artifacts/
    #project: # Required when source == Specific
    #pipeline: # Required when source == Specific
    #preferTriggeringPipeline: false # Optional
    #runVersion: 'latest' # Required when source == Specific# Options: latest, latestFromBranch, specific
    #runBranch: 'refs/heads/master' # Required when source == Specific && RunVersion == LatestFromBranch
    #runId: # Required when source == Specific && RunVersion == Specific
    #tags: # Optional
    #patterns: '**' # Optional

- script: |
    FILE=$ARTIFACT_DIR/webapp/image.tar
    if test -f "$FILE"; then
        echo "$FILE exist"
        docker load -i $FILE
    else
        echo "Not Loading WebApp"
    fi

    FILE=$ARTIFACT_DIR/builder/image.tar
    if test -f "$FILE"; then
        echo "$FILE exist"
        docker load -i $FILE
    else
        echo "Not Loading Builder"
    fi
  displayName: Load Docker Image Artifacts
  env:
    ARTIFACT_DIR: $(Pipeline.Workspace)/artifacts
