
parameters:
  staging: 'false'

jobs:

- job: deploy_container
  displayName: Deploy Container Image
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  dependsOn:
    - infrastructure
    - apps
  pool:
    vmImage: 'Ubuntu-16.04'
  variables:
    - name: pulumi.acrName
      value: $[ dependencies.infrastructure.outputs['pulumi.acrName'] ]
    - name: pulumi.webAppResourceId
      value: $[ dependencies.infrastructure.outputs['pulumi.webAppResourceId'] ]
    - name: pulumi.identityAppResourceId
      value: $[ dependencies.infrastructure.outputs['pulumi.identityAppResourceId'] ]
  steps:
    - template: artifacts.download.steps.yaml
    - template: az-login.steps.yaml
    - template: app.deploy-container-image.steps.yaml

- job: deploy_to_appsvc
  displayName: Deploy to Azure App Svc
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  dependsOn: 
    - deploy_container
    - infrastructure
  pool:
    vmImage: 'Ubuntu-16.04'
  variables:
  - name: staging
    value: ${{ parameters.staging }}
  - name: pulumi.acrName
    value: $[ dependencies.infrastructure.outputs['pulumi.acrName'] ]
  - name: pulumi.webAppResourceId
    value: $[ dependencies.infrastructure.outputs['pulumi.webAppResourceId'] ]
  - name: pulumi.identityAppResourceId
    value: $[ dependencies.infrastructure.outputs['pulumi.identityAppResourceId'] ]
  steps:
  - template: artifacts.download.steps.yaml
  - script: |
      echo acrName is $(acrName)
      echo webAppResourceId is $(webAppResourceId)
      echo identityAppResourceId is $(identityAppResourceId)
    displayName: Echo requirement variables.
  - template: app.deploy-app-svc.steps.yaml

