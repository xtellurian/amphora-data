
parameters:
  staging: 'false'

jobs:
- job: deploy-to-appsvc
  displayName: Deploy to Azure App Svc
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  dependsOn: 
    - infrastructure
    - apps
  pool:
    vmImage: 'Ubuntu-16.04'

  variables:
  - name: staging
    value: ${{ parameters.staging }}
  - name: pulumi.acrName
    value: $[ dependencies.infrastructure.outputs['pulumi.acrName'] ]
  - name: pulumi.webAppResourceId
    value: $[ dependencies.infrastructure.outputs['pulumi.webAppResourceId'] ]
  steps:
  - script: |
      echo acrName is $(acrName)
      echo webAppResourceId is $(webAppResourceId)
    displayName: Echo requirement variables.
  - template: app.deploy-app-svc.steps.yaml

- job: deploy-to-k8s
  displayName: Deploy to Kubernetes
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  dependsOn: 
    - infrastructure
    - apps
  pool:
    vmImage: 'Ubuntu-16.04'

  variables:
  - name: staging
    value: ${{ parameters.staging }}
  - name: pulumi.acrName
    value: $[ dependencies.infrastructure.outputs['pulumi.acrName'] ]
  - name: pulumi.webAppResourceId
    value: $[ dependencies.infrastructure.outputs['pulumi.webAppResourceId'] ]
  
  steps:
    - template: az-login.steps.yaml
    - template: install.pulumi.steps.yaml
    - script: |
        pushd k8s
        . ../pulumi-stack-ci.sh
        pulumi up -y -c image="$IMAGE"
      displayName: 
      env:
        IMAGE: $(pulumi.acrName).azurecr.io/webapp:$(Build.SourceBranchName)-$(Build.BuildNumber)
