steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core sdk'
  inputs:
    packageType: sdk
    version: 3.1.100
    installationPath: $(Agent.ToolsDirectory)/dotnet
- script: |
    pushd apps
    dotnet test --filter Category=Versioning
    popd
  displayName: Run Versioning Tests
- script: |
    prodVersion=$(curl https://beta.amphoradata.com/api/version)
    nextVersion=$(cat apps/test/bin/Debug/netcoreapp${DOTNET_VERSION}/version.txt)
    prodMajor=$(echo "$prodVersion" | awk -F'.' '{print $1}')
    nextMajor=$(echo "$nextVersion" | awk -F'.' '{print $1}')
    prodMinor=$(echo "$prodVersion" | awk -F'.' '{print $2}')
    nextMinor=$(echo "$nextVersion" | awk -F'.' '{print $2}')
    prodPatch=$(echo "$prodVersion" | awk -F'.' '{print $3}')
    nextPatch=$(echo "$nextVersion" | awk -F'.' '{print $3}')

    echo Prod is $prodVersion
    echo Next is $nextVersion

    if [ $nextPatch -gt $prodPatch ]
    then
        echo This is a patch update
        echo "##vso[task.setvariable variable=IS_PATCH]True"
    else
        echo This is NOT a patch update
    fi
    echo "Setting APP_VERSION: ${nextVersion}"
    echo "##vso[task.setvariable variable=APP_VERSION]$nextVersion"
  displayName: Set IS_PATCH variable
  env:
    DOTNET_VERSION: "3.1"
    