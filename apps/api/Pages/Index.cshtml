@page
@model Amphora.Api.Pages.IndexModel
@{
    ViewData["Title"] = "Home Page";
}

<div class="container">

    <div class="row justify-content-center">
        <div class="col text-center">
            <h1>Welcome to Amphora Data</h1>
            <p>A platform to discover, package, and trade data to increase sustainability and profitability of farms</p>
            <hr/>
        </div>
    </div>
    <div class="row justify-content-center">
        <div class="col-10">
            <div id="homeCarousel" class="carousel slide" data-ride="carousel" data-interval="10000">
                <div class="carousel-inner">
                    <div class="carousel-item active text-center">
                        <canvas id="wordcloud" width="1100px" height="800px"></canvas>
                    </div>
                    <div class="carousel-item">
                        <img class="d-block w-100" src="~/images/features.png" alt="A list of Amphora Features">
                    </div>
                    <div class="carousel-item">
                        <img class="d-block w-100" src="~/images/AmphoraOnMap.png" alt="Amphora on a map of Australia">
                    </div>
                    <div class="carousel-item">
                        @await Component.InvokeAsync("FeaturedAmphora")
                    </div>
                </div>
                <a class="carousel-control-prev" href="#homeCarousel" role="button" data-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="sr-only">Previous</span>
                </a>
                <a class="carousel-control-next" href="#homeCarousel" role="button" data-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="sr-only">Next</span>
                </a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/wordcloud/src/wordcloud2.js"></script>
    <script>
        var list = @Html.Raw(@Newtonsoft.Json.JsonConvert.SerializeObject(Model.Frequencies));
        var maxWordCount = @Html.Raw(Model.MaxWordCount);
        var minWordCount = @Html.Raw(Model.MinWordCount);
        var weightFactor = function (size) {
            var normalisedSize = 1 + (size / maxWordCount);
            var n = normalisedSize * Math.log(normalisedSize) * $('#wordcloud').width() ;
            return n;
        }

        var clickCallback = function callback(item, dimension, event) {
            var base_url = window.location.origin;
            if(item && item[0])
            {
                window.location = `${base_url}/Discover?SearchDefinition.Term=${item[0]}`;
            }
        }
        window.addEventListener('load', function() {
            var options = { list: list, 
                minSize: 8,
                weightFactor, 
                shrinkToFit: true, 
                shape: "square", 
                clearCanvas: true, 
                fontFamily: 'Fjalla One, sans-serif',
                click: clickCallback}
            WordCloud(document.getElementById('wordcloud'), options  );
        });
    </script>

}