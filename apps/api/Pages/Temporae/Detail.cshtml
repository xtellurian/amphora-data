@page
@model Amphora.Api.Pages.Temporae.DetailModel

@{
    ViewData["Title"] = @Model.Tempora.Title;
}

<!-- <link rel="stylesheet" type="text/css" href="https://unpkg.com/tsiclient@1.2.24/tsiclient.css"></link> -->

<div id="main" class="container">
    <div class="row">
        <div class="col-5">
            <h1 class="display-4">@Model.Tempora.Title</h1>
        </div>
        <div class="col">
            <span>
                <a asp-page="/Temporae/Index"><button class="btn btn-secondary">Back</button></a>
            </span>
        </div>
    </div>
    <div class="row">
        <div class="col-4">
            <div class="card mb-3">
                <div class="card-header">
                    <h5 class="card-title">Admin Pane</h5>
                </div>
                <div class="card-body">
                    <small> @Model.Tempora.Id </small>                                                      
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card mb-3">
                <div class="card-header">
                    <h5 class="card-title">Details</h5>
                </div>
                <div class="card-body">
                    @Model.Tempora.Description
                    $@Model.Tempora.Price           
                                                      
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div id="chart1" style="width: 100%; height: 400px; margin-top: 40px; float: left;"></div>
    </div>
</div>



@section Scripts {

<script src="https://unpkg.com/tsiclient@1.2.24/tsiclient.js"></script>

<script>
        var tsiClient = new TsiClient();
        var linechartTsqExpressions = [];
        var startDate = new Date();
        startDate.setFullYear(startDate.getFullYear()-25);
        var endDate = new Date();
        console.log(endDate);

        linechartTsqExpressions.push(new tsiClient.ux.TsqExpression(
            {timeSeriesId: ["@Model.Tempora.Id"]}, // instance json
            {Max: {
                kind: 'numeric',
                value: {tsx: '$event.rainfall_mm'},
                filter: null,
                aggregation: {tsx: 'max($value)'}
            }}, // variable json
            { from: startDate, to: endDate, bucketSize: '7d' }, // search span
            '#60B9AE', // color
            'MaxValue')); // alias
        linechartTsqExpressions.push(new tsiClient.ux.TsqExpression(
            {timeSeriesId: ["@Model.Tempora.Id"]}, // instance json
            {Avg: {
                kind: 'numeric',
                value: {tsx: '$event.rainfall_mm'},
                filter: null,
                aggregation: {tsx: 'sum($value)'}
            }}, // variable json
            { from: startDate, to: endDate, bucketSize: '14d' }, // search span
            '#D869CB', // color
            'Sum')); // 
        linechartTsqExpressions.push(new tsiClient.ux.TsqExpression(
            {timeSeriesId: ["@Model.Tempora.Id"]}, // instance json
            {Min: {
                kind: 'numeric',
                value: {tsx: '$event.rainfall_mm'},
                filter: null,
                aggregation: {tsx: 'min($value)'}
            }}, // variable json
            { from: startDate, to: endDate, bucketSize: '7d' }, // search span
            '#BD1509', // color
            'MinValue')); // 
        
            console.log(linechartTsqExpressions);
            tsiClient.server.getTsqResults("@Model.Token", window.location.host +"/tsi", linechartTsqExpressions.map(function(ae){return ae.toTsq()})).then(function(result){
                console.log(result);
                var transformedResult = tsiClient.ux.transformTsqResultsForVisualization(result, linechartTsqExpressions);
                var lineChart = new tsiClient.ux.LineChart(document.getElementById('chart1'));
                lineChart.render(transformedResult, {theme: 'light', grid: true, tooltip: true, legend: 'compact'}, linechartTsqExpressions);
            });
</script>
}