@page
@model Amphora.Api.Pages.Temporae.DetailModel

@{
    ViewData["Title"] = @Model.Tempora.Title;
}

<!-- <link rel="stylesheet" type="text/css" href="https://unpkg.com/tsiclient@1.2.24/tsiclient.css"></link> -->

<div id="main" class="container">
    <div class="row">
        <div class="col-5">
            <h1 class="display-4">@Model.Tempora.Title</h1>
        </div>
        <div class="col">
            <span>
                <a asp-page="/Temporae/Index"><button class="btn btn-secondary">Temporae</button></a>
            </span>
        </div>
    </div>
    <div class="row">
        <div class="col-4">
            <div class="card mb-3">
                <div class="card-header">
                    <h5 class="card-title">Admin Pane</h5>
                </div>
                <div class="card-body">
                    <small> @Model.Tempora.Id </small>                                                      
                </div>
            </div>
        </div>
        <div class="col">
            <div class="card mb-3">
                <div class="card-header">
                    <h5 class="card-title">Details <button class="btn btn-primary" onclick="alert('Data is now available for download.')"> Buy ($@Model.Tempora.Price) </button></h5>
                </div>
                <div class="card-body">
                    @Model.Tempora.Description                         
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col">
           
        </div>
    </div>
    <div class="row">
        <div class="col-3">
            <h3> Weekly Averages</h3>
        </div>
        <div id="chart" style="width: 100%; height: 400px; margin-top: 40px; float: left;"></div>
    </div>
</div>



@section Scripts {

<script src="https://unpkg.com/tsiclient@1.2.24/tsiclient.js"></script>

<script>
    var scheme = new ColorScheme;

    var tsiClient = new TsiClient();
    var startDate = new Date();
    startDate.setMonth( startDate.getMonth() - 12);
    endDate = new Date();
    var linechartTsqExpressions = [];

    var cols = @Html.Raw(@Newtonsoft.Json.JsonConvert.SerializeObject(Model.Domain.GetDatumMembers()));
    scheme.from_hue(cols.length)         
        .scheme('triade')   
        .variation('soft');


    var colors = scheme.colors();
    let count = 0;
    cols.forEach((col) => {
        linechartTsqExpressions.push(new tsiClient.ux.TsqExpression(
            {}, 
            {Avg: {}}, 
            { 
                from: startDate, 
                to: endDate 
            }, 
            '#' + colors[count++], // color
            col.Name)); // 
    });
    
    console.log("linechartTsqExpressions");
    console.log(linechartTsqExpressions);
    var response = @Html.Raw(@Model.QueryResponse);
    console.log("response");
    console.log(response);
    var transformedResult = tsiClient.ux.transformTsqResultsForVisualization(response, linechartTsqExpressions);
    console.log("transformedResult");
    console.log(transformedResult);
    var lineChart = new tsiClient.ux.LineChart(document.getElementById('chart'));
    lineChart.render(transformedResult, {theme: 'light', grid: true, tooltip: true, legend: 'shown', yAxisState: 'overlap'}, linechartTsqExpressions);
</script>
}