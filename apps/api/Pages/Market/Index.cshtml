@page
@model Amphora.Api.Pages.Market.IndexModel
@{
    ViewData["Title"] = "Market";
}

<div class="container">
    <div class="row">
        <div class="col text-center">
            <h2 class="display-4">Data Market</h2>
        </div>
    </div>
    <div class="row">
        <div class="col text-center">
            <form id="searchform" method="get" >
                <div class="input-group mb-4 border rounded-pill p-1">
                    <input type="search" placeholder="What're you searching for?" asp-for="SearchDefinition.Term" aria-describedby="secondary-search-button" class="form-control bg-none border-0">
                    <div class="input-group-append border-0">
                        <button id="secondary-search-button" type="submit" class="btn btn-link text-success"><i class="icon fa fa-search"></i></button>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <div class="row">
        <div id="advanced" class="col-sm-4 text-center">

            <div class="card mb-2">
                <h4 class="mt-1">Advanced</h4>
                <a class="float-left" data-toggle="collapse" href="#filterCollapse" role="button" aria-expanded="false" aria-controls="collapseAdvanced">
                    <i class="fas fa-angle-down"></i>
                </a>

                <div class="collapse" id="filterCollapse">
                    <div class="container card-body">
                        <div class="row mb-2">
                            <div class="col-4 body ui-widget">
                                <input id="autoComplete" form="searchform" type="text" tabindex="1" autocomplete="off">
                            </div>
                            <div class="col selection"></div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <input id="lat" form="searchform" asp-for="SearchDefinition.Lat" placeholder="Latitude" class="form-control bg-none border-1">
                                <span asp-validation-for="SearchDefinition.Lat" class="text-danger"></span>
                            </div>
                            <div class="col">
                                <input id="lon" form="searchform" asp-for="SearchDefinition.Lon" placeholder="Longitude" class="form-control bg-none border-1">
                                <span asp-validation-for="SearchDefinition.Lon" class="text-danger"></span>
                            </div>
                            <div class="col">
                                <input id="dist" form="searchform" asp-for="SearchDefinition.Dist" placeholder="Distance (km)" class="form-control bg-none border-1">
                                <span asp-validation-for="SearchDefinition.Dist" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <hr/>
                            </div>
                        </div>
                        <div class="row mb-2">
                            <div class="col">
                                <input id="labels" form="searchform" asp-for="SearchDefinition.Labels" placeholder="Labels (comma separated)" class="form-control bg-none border-1">
                                <span asp-validation-for="SearchDefinition.Labels" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="row text-left">
                            <div class="col">
                                @foreach(var f in Model.LabelFacets)
                                {
                                    <span class="d-inline-block text-truncate badge badge-dark" style="max-width: 50px;" onclick="onFacetLabelClicked('@f.Value')">
                                        @f.Value
                                    </span>
                                }
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <hr/>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <div class="input-group-append">
                                    <button id="primary-search-button" form="searchform" type="submit" class="btn btn-primary btn-block">Search</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div class="col-sm-8">
            <div>
                <table id="market-table" class="table table-borderless table-striped">
                    <tbody>
                    @if(Model.Entities?.Count() == 0)
                    {
                        <td class="text-center">
                            No Results
                        </td>
                    }
                    @foreach (var entity in Model.Entities)
                    {
                        @await Component.InvokeAsync("AmphoraRow", new {amphora = entity, isTable = true})
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    @{
        var d = Model.SearchDefinition;
        // skip is zero based
        int numPages = (int)(Model.Count / d.Top) + 1;
        int currentPage = (int)d.Page;
        var previousPage = d.Page - 1;
        var nextPage = d.Page + 2;
        var startPage = Math.Max(0, currentPage - 3);
        var endPage = Math.Min(numPages, currentPage + 3);
        string nextEnabled = "";
        string previousEnabled = "";
        if(nextPage > numPages) nextEnabled = "disabled";
        if(previousPage < 1) previousEnabled = "disabled";
    }
    <div class="row">
        <div class="col text-center">
            <hr/>
            <p> Page @currentPage of @(numPages - 1)</p>
            <nav aria-label="...">
                <ul class="pagination justify-content-center">
                    <li class="page-item @previousEnabled">
                        <a class="page-link" asp-page="/Market/Index" 
                            asp-route-SearchDefinition.Term="@Model.SearchDefinition.Term" 
                            asp-route-SearchDefinition.Page="0"
                            asp-route-SearchDefinition.Top="@Model.SearchDefinition.Top" 
                            asp-route-SearchDefinition.Lat="@Model.SearchDefinition.Lat" 
                            asp-route-SearchDefinition.Lon="@Model.SearchDefinition.Lon" 
                            asp-route-SearchDefinition.Dist="@Model.SearchDefinition.Dist"
                            tabindex="-1">
                            <<
                        </a>
                    </li>
                    <li class="page-item @previousEnabled">
                        <a class="page-link" asp-page="/Market/Index" 
                            asp-route-SearchDefinition.Term="@Model.SearchDefinition.Term" 
                            asp-route-SearchDefinition.Page="@previousPage"
                            asp-route-SearchDefinition.Top="@Model.SearchDefinition.Top" 
                            asp-route-SearchDefinition.Lat="@Model.SearchDefinition.Lat" 
                            asp-route-SearchDefinition.Lon="@Model.SearchDefinition.Lon" 
                            asp-route-SearchDefinition.Dist="@Model.SearchDefinition.Dist"
                            tabindex="-1">
                            <
                        </a>
                    </li>
                    @for(var p = startPage; p < endPage; p++)
                    {
                        var active = "";
                        if(p == currentPage) active = "active";
                        <li class="page-item @active">
                            <a class="page-link" asp-page="/Market/Index" 
                                asp-route-SearchDefinition.Term="@Model.SearchDefinition.Term" 
                                asp-route-SearchDefinition.Page="@p" 
                                asp-route-SearchDefinition.Top="@Model.SearchDefinition.Top" 
                                asp-route-SearchDefinition.Lat="@Model.SearchDefinition.Lat" 
                                asp-route-SearchDefinition.Lon="@Model.SearchDefinition.Lon" 
                                asp-route-SearchDefinition.Dist="@Model.SearchDefinition.Dist" >
                                @p
                            </a>
                        </li>
                    }
                    <li class="page-item @nextEnabled">
                        <a class="page-link" asp-page="/Market/Index" 
                            asp-route-SearchDefinition.Term="@Model.SearchDefinition.Term" 
                            asp-route-SearchDefinition.Page="@nextPage"
                            asp-route-SearchDefinition.Top="@Model.SearchDefinition.Top" 
                            asp-route-SearchDefinition.Lat="@Model.SearchDefinition.Lat" 
                            asp-route-SearchDefinition.Lon="@Model.SearchDefinition.Lon" 
                            asp-route-SearchDefinition.Dist="@Model.SearchDefinition.Dist" >
                        >
                        </a>
                    </li>
                    <li class="page-item @nextEnabled">
                        <a class="page-link" asp-page="/Market/Index" 
                            asp-route-SearchDefinition.Term="@Model.SearchDefinition.Term" 
                            asp-route-SearchDefinition.Page="@(numPages -1)"
                            asp-route-SearchDefinition.Top="@Model.SearchDefinition.Top" 
                            asp-route-SearchDefinition.Lat="@Model.SearchDefinition.Lat" 
                            asp-route-SearchDefinition.Lon="@Model.SearchDefinition.Lon" 
                            asp-route-SearchDefinition.Dist="@Model.SearchDefinition.Dist" >
                        >>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/@@tarekraafat/autocomplete.js@@6.1.0/dist/js/autoComplete.js"></script>
    <script src="~/js/geo.js"></script>
    <script>
        const url = '/Market/LocationSearch';
        autocompleteGeoSearch(null, url, "#lat", "#lon")
    </script>
    <script>
        function onFacetLabelClicked(label) {
            var labelWithComma = label + ",";
            var currrentValue = document.getElementById("labels").value;
            if(currrentValue.includes(labelWithComma))
            {
                document.getElementById("labels").value = currrentValue.replace(labelWithComma, '');
            }
            else
            {
                document.getElementById("labels").value += labelWithComma; 
            }
        }
    </script>

}
