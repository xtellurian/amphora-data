@page
@model Amphora.Api.Areas.Amphorae.Pages.IndexPageModel
@{
    ViewData["Title"] = "Amphorae";
}

<div id="main" class="container">
    <div class="row main-header">
        <div class="col">
            <span>
                <a class="btn btn-primary float-right" asp-page="./Create">
                    Create
                </a>
                <h2>Manage Amphora</h2>
            </span>
        </div>
    </div>
    <div class="row">
        <div class="col-md-3">
            <div class="card mb-3">
                <div class="card-header">
                    <h5 class="card-title">View Options</h5>
                </div>
                <div class="card-body">
                    @{
                        var thisUrl = Url.Content("~");
                        var mineUrl = $"{thisUrl}?handler=mine";
                        var orgUrl = $"{thisUrl}?handler=org";
                        var purchasedUrl = $"{thisUrl}?handler=purchased";
                        string mine = string.Empty;
                        string org = string.Empty;
                        string pur = string.Empty;
                        if (string.Equals(Model.Handler, "mine" )) {mine = "active";}
                        if( string.Equals(Model.Handler, "org" )) {org = "active";}
                        if( string.Equals(Model.Handler, "purchased" )){ pur = "active";}
                    }
                    <a href="@mineUrl">
                        <button type="button" class="m-1 btn btn-light btn-block @mine">Mine</button>
                    </a>                              
                    <a href="@orgUrl">
                        <button type="button" class="m-1 btn btn-light btn-block @org">My Org</button>
                    </a>
                    <a href="@purchasedUrl">
                        <button type="button" class="m-1 btn btn-light btn-block @pur">Purchased</button>
                    </a>
                </div>
            </div>
        </div>
        @if(Model.Amphorae?.Count() == 0)
        {
            <div class="col text-center align-middle">
                <p>
                    There's nothing here
                </p>
            </div>
        }
        else
        {
            <div class="col">
                @{var index = 0;}
                @foreach (var entity in Model.Amphorae)
                {
                    @await Component.InvokeAsync("AmphoraRow", new {amphora = entity, isSelectable=true, index = index++})
                }

                <form method="post" asp-page-handler="delete">
                    <input hidden id="selectedAmphoraInput" asp-for="JsonSelectedAmphoraIdArray"/>
                     <div class="form-group" id="actionButtonsDiv" style="display: none;">
                        <input class="btn btn-danger" type="submit" value="Delete" />
                    </div>
                </form>
            </div>
        }
    </div>
    <div class="row align-items-end">
        <div class="col">
            <nav aria-label="...">
                <ul class="pagination justify-content-center">
                    @{
                        // skip is zero based
                        int numPages = (( Model.Count ?? 0) /  (Model.Top ?? 0) + 1);
                        int currentPage = (int) Model.Skip + 1;
                        var previousPage = Model.Skip;
                        var previousSkip = Model.Skip - 1;
                        var nextPage = Model.Skip + 2;
                        var nextSkip = Model.Skip + 1;
                        var startPage = Math.Max(1, currentPage - 2);
                        var endPage = Math.Min(numPages, currentPage + 2);
                        string nextEnabled = "";
                        string previousEnabled = "";
                        if(nextPage > numPages) nextEnabled = "disabled";
                        if(previousPage < 1) previousEnabled = "disabled";
                    }
                    <li class="page-item @previousEnabled">
                        <a class="page-link" asp-page="./Index" 
                            asp-route-handler="@Model.Handler"
                            asp-route-skip="0"
                            asp-route-top="@Model.Top" 
                            tabindex="-1">
                            <<
                        </a>
                    </li>
                    <li class="page-item @previousEnabled">
                        <a class="page-link" asp-page="./Index" 
                            asp-route-handler="@Model.Handler"
                            asp-route-skip="@previousSkip"
                            asp-route-top="@Model.Top" 
                            tabindex="-1">
                            <
                        </a>
                    </li>
                    @for(var p = startPage; p <= endPage; p++)
                    {
                        var active = "";
                        if(p == currentPage) active = "active";
                        <li class="page-item @active">
                            <a class="page-link" asp-page="./Index" 
                                asp-route-handler="@Model.Handler"
                                asp-route-skip="@(p - 1)"
                                asp-route-top="@Model.Top" >
                                @p
                            </a>
                        </li>
                    }
                    <li class="page-item @nextEnabled">
                        <a class="page-link" asp-page="./Index" 
                            asp-route-handler="@Model.Handler"
                            asp-route-skip="@nextSkip"
                            asp-route-top="@Model.Top"  >
                            >
                        </a>
                    </li>
                    <li class="page-item @nextEnabled">
                        <a class="page-link" asp-page="./Index" 
                            asp-route-handler="@Model.Handler"
                            asp-route-skip="@(numPages - 1)"
                            asp-route-top="@Model.Top"  >
                            >>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(function () {
            $('[data-toggle="tooltip"]').tooltip()
            })
    </script>
    <script>
        selectedAmphora = [];
        function onSelectAmphora(amphoraId) {
            // Get the checkbox
            var checkBox = document.getElementById("select-" + amphoraId);
            var actionDiv = document.getElementById("actionButtonsDiv");

            // If the checkbox is checked, display the output text
            if (checkBox.checked == true){
                selectedAmphora.push(amphoraId);
            } else {
                selectedAmphora = selectedAmphora.filter(e => e !== amphoraId); // will return ['A', 'C']
            }

            if(selectedAmphora.length == 0)
            {
                actionDiv.style.display = "none";
            } else {

                actionDiv.style.display = "block";
            }

            document.getElementById("selectedAmphoraInput").value = JSON.stringify(selectedAmphora);
        } 
    </script>
}


