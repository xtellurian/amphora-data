trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  imageName: api
  imageTag: latest
  buildConfiguration: 'Release'

steps:

- task: NuGetCommand@2
  displayName: 'Authenticate with Azure DevOps NuGet'
  inputs:
    command: custom
    arguments: sources update -Name "TimeSeriesInsightsClient" -Username "vsts" -Password "$(System.AccessToken)" -StorePasswordInClearText -ConfigFile ./NuGet.Config


- script: dotnet build --configuration $(buildConfiguration)
  workingDirectory: apps
  displayName: 'dotnet build $(buildConfiguration)'

- script: dotnet test  --logger trx /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura apps.sln
  workingDirectory: apps
  displayName: dotnet test

- task: PublishTestResults@2
  condition: always() 
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'

- task: PublishCodeCoverageResults@1
  displayName: Publish Code Coverage Report
  inputs:
    summaryFileLocation: $(Build.SourcesDirectory)/apps/test/coverage.cobertura.xml
    codecoverageTool: cobertura

- script: docker build .
  workingDirectory: apps
  displayName: Build docker image